{"version":3,"sources":["client-test.js"],"names":["test","require","nock","senagram","fixtures","options","endpoints","pictures","users","auth","beforeEach","t","context","client","crearCliente","is","getPicture","guardarPicture","likePicture","listaPicture","listaPicturePorTag","guardarUsuario","getUsuario","autenticar","imagen","getImagen","get","publicId","reply","result","console","log","deepEqual"],"mappings":"AAAA;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,WAAWF,QAAQ,KAAR,CAAjB;AACA,MAAMG,WAAWH,QAAQ,YAAR,CAAjB;;AAEA,IAAII,UAAU;AACZC,aAAW;AACTC,cAAU,8BADD;AAETC,WAAO,2BAFE;AAGTC,UAAM;AAHG;AADC,CAAd;;AAQAT,KAAKU,UAAL,CAAgBC,KAAK;AACnBA,IAAEC,OAAF,CAAUC,MAAV,GAAmBV,SAASW,YAAT,CAAsBT,OAAtB,CAAnB;AACD,CAFD;;AAIAL,KAAK,SAAL,EAAgBW,KAAK;AACnB,QAAME,SAASV,SAASW,YAAT,EAAf;;AAEAH,IAAEI,EAAF,CAAK,OAAOF,OAAOG,UAAnB,EAA+B,UAA/B;AACAL,IAAEI,EAAF,CAAK,OAAOF,OAAOG,UAAnB,EAA+B,UAA/B;AACAL,IAAEI,EAAF,CAAK,OAAOF,OAAOI,cAAnB,EAAmC,UAAnC;AACAN,IAAEI,EAAF,CAAK,OAAOF,OAAOK,WAAnB,EAAgC,UAAhC;AACAP,IAAEI,EAAF,CAAK,OAAOF,OAAOM,YAAnB,EAAiC,UAAjC;AACAR,IAAEI,EAAF,CAAK,OAAOF,OAAOO,kBAAnB,EAAuC,UAAvC;AACAT,IAAEI,EAAF,CAAK,OAAOF,OAAOQ,cAAnB,EAAmC,UAAnC;AACAV,IAAEI,EAAF,CAAK,OAAOF,OAAOS,UAAnB,EAA+B,UAA/B;AACAX,IAAEI,EAAF,CAAK,OAAOF,OAAOU,UAAnB,EAA+B,UAA/B;AACD,CAZD;;AAcAvB,KAAK,YAAL,EAAmB,MAAMW,CAAN,IAAW;AAC5B,QAAME,SAASF,EAAEC,OAAF,CAAUC,MAAzB;;AAEA,MAAIW,SAASpB,SAASqB,SAAT,EAAb;;AAEAvB,OAAKG,QAAQC,SAAR,CAAkBC,QAAvB,EACCmB,GADD,CACM,IAAGF,OAAOG,QAAS,EADzB,EAECC,KAFD,CAEO,GAFP,EAEYJ,MAFZ;;AAIA,MAAIK,SAAS,MAAMhB,OAAOG,UAAP,CAAkBQ,OAAOG,QAAzB,CAAnB;;AAEAG,UAAQC,GAAR,CAAYP,MAAZ;;AAEAM,UAAQC,GAAR,CAAY,OAAOP,MAAnB;;AAEAb,IAAEqB,SAAF,CAAYR,MAAZ,EAAoBK,MAApB;AACD,CAhBD","file":"client-test.js","sourcesContent":["'use strict'\r\n\r\nconst test = require('ava')\r\nconst nock = require('nock')\r\nconst senagram = require('../')\r\nconst fixtures = require('./fixtures')\r\n\r\nlet options = {\r\n  endpoints: {\r\n    pictures: 'http://senagram.test/picture',\r\n    users: 'http://senagram.test/user',\r\n    auth: 'http://senagram.test/auth'\r\n  }\r\n}\r\n\r\ntest.beforeEach(t => {\r\n  t.context.client = senagram.crearCliente(options)\r\n})\r\n\r\ntest('cliente', t => {\r\n  const client = senagram.crearCliente()\r\n\r\n  t.is(typeof client.getPicture, 'function')\r\n  t.is(typeof client.getPicture, 'function')\r\n  t.is(typeof client.guardarPicture, 'function')\r\n  t.is(typeof client.likePicture, 'function')\r\n  t.is(typeof client.listaPicture, 'function')\r\n  t.is(typeof client.listaPicturePorTag, 'function')\r\n  t.is(typeof client.guardarUsuario, 'function')\r\n  t.is(typeof client.getUsuario, 'function')\r\n  t.is(typeof client.autenticar, 'function')\r\n})\r\n\r\ntest('getPicture', async t => {\r\n  const client = t.context.client\r\n\r\n  let imagen = fixtures.getImagen()\r\n\r\n  nock(options.endpoints.pictures)\r\n  .get(`/${imagen.publicId}`)\r\n  .reply(200, imagen)\r\n\r\n  let result = await client.getPicture(imagen.publicId)\r\n\r\n  console.log(imagen)\r\n\r\n  console.log(typeof imagen)\r\n\r\n  t.deepEqual(imagen, result)\r\n})\r\n"]}